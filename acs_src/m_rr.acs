Script "RR_DoylePiss" (void)
{
	int inprange = 0;
	int newtid = UniqueTid();
	int montid = UniqueTid();
	SpawnSpotFacingForced("PatrolPoint",0,newtid);
	ACS_NamedExecuteWithResult("RR_DoylePatrolPointMove",newtid,0,0,0);
	SetActivator(0,AAPTR_Target);
	TakeInventory("RRDoylePissOff",1);
	Thing_ChangeTid(0,montid);
	Thing_SetGoal(montid,newtid,0,0);
	//Thing_ChangeTid(newtid,0);
	Thing_ChangeTid(montid,0);
			
	while(!inprange && !CheckInventory("RRDoylePissOff"))
	{
		int distancex = abs(GetActorX(newtid) - GetActorX(0))>>16;
		int distancey = abs(GetActorY(newtid) - GetActorY(0))>>16;
		int distancez = abs(GetActorZ(newtid) - GetActorZ(0))>>16;
		int distance = magnitudeTwo(distancex, distancey);	
				
		if(distance <= 52 && distancez <= 52)
		{
			Thing_Remove(newtid);
			SetActorState(0,"Pee",1);
				inprange = 1;
		}
				
		Delay(1);
	}
}

Script "RR_DoylePatrolPointMove" (int newtid)
{
	int ptid = UniqueTid();
	Thing_ChangeTid(0,ptid);
	SetActivator(newtid,AAPTR_DEFAULT);
	SetPointer(AAPTR_Tracer,ptid);
	Thing_ChangeTid(ptid,0);
	
	while(ClassifyActor(0) != ACTOR_WORLD)
	{
		Warp(AAPTR_TRACER,0,0,0,0,WARPF_USEPTR|WARPF_NOCHECKPOSITION);
		Delay(3);
	}
}

Script "RR_CussPack" (int monster, int funct)
{
	int cussPack = GetCVAR("mm_redneckcusspack");
	switch(monster)
	{
		case 0:
			switch(funct)
			{
				case 1:
					switch(cussPack)
					{
						default:
							SetActorProperty(0,APROP_SeeSound,"Coot/See");
							SetActorProperty(0,APROP_ActiveSound,"Coot/Talk");
							SetActorProperty(0,APROP_PainSound,"Coot/Pain");
							SetActorProperty(0,APROP_DeathSound,"Coot/Die");
							break;
						case 1:
							SetActorProperty(0,APROP_SeeSound,"Coot/ImaGetU");
							SetActorProperty(0,APROP_ActiveSound,"Coot/Talk/NoCuss");
							SetActorProperty(0,APROP_PainSound,"Coot/Pain3");
							SetActorProperty(0,APROP_DeathSound,"Coot/DieC");
							break;
						case 2:
							SetActorProperty(0,APROP_SeeSound,"Coot/FuckU");
							SetActorProperty(0,APROP_ActiveSound,"Coot/Talk/Cuss");
							SetActorProperty(0,APROP_PainSound,"Coot/Pain2");
							SetActorProperty(0,APROP_DeathSound,"Coot/DieB");
							break;
					}
					break;
			}
			break;
		case 1:
			switch(funct)
			{
				case 0:
					switch(cussPack)
					{
						default:
							SetActorProperty(0,APROP_SeeSound,"Billy/See");
							SetActorProperty(0,APROP_ActiveSound,"Billy/Talk");
							SetActorProperty(0,APROP_PainSound,"Billy/Pain");
							SetActorProperty(0,APROP_DeathSound,"Billy/Die");
							break;
						case 1:
							SetActorProperty(0,APROP_SeeSound,"Billy/See1");
							SetActorProperty(0,APROP_ActiveSound,"Billy/Talk/NoCuss");
							SetActorProperty(0,APROP_PainSound,"Billy/Pain1");
							SetActorProperty(0,APROP_DeathSound,"Billy/Die/NoCuss");
							break;
						case 2:
							SetActorProperty(0,APROP_SeeSound,"Billy/See2");
							SetActorProperty(0,APROP_ActiveSound,"Billy/Talk/Cuss");
							SetActorProperty(0,APROP_PainSound,"Billy/Pain2");
							SetActorProperty(0,APROP_DeathSound,"Billy/Die/Cuss");
							break;
					}
					break;
				case 1:
					switch(cussPack)
					{
						default:
							PlaySound(0,"Billy/Itch",CHAN_BODY,1.0,0,ATTN_NORM);
							break;
						case 1:
							PlaySound(0,"Billy/Itch1",CHAN_BODY,1.0,0,ATTN_NORM);
							break;
						case 2:
							PlaySound(0,"Billy/Itch2",CHAN_BODY,1.0,0,ATTN_NORM);
							break;
					}
					break;
			}
			break;
		case 2:
			switch(funct)
			{
				case 0:
					switch(cussPack)
					{
						default:
							SetActorProperty(0,APROP_ActiveSound,"Hobbes/Talk");
							break;
						case 1:
							SetActorProperty(0,APROP_ActiveSound,"Hobbes/Talk/NoCuss");
							break;
						case 2:
							SetActorProperty(0,APROP_ActiveSound,"Hobbes/Talk/Cuss");
							break;
					}
					break;
				case 1:
					switch(cussPack)
					{
						default:
							PlaySound(0,"Hobbes/Reloadin",CHAN_VOICE,1.0,0,ATTN_NORM);
							break;
						case 1:
							PlaySound(0,"Hobbes/Reloadin/NoCuss",CHAN_VOICE,1.0,0,ATTN_NORM);
							break;
						case 2:
							PlaySound(0,"Hobbes/Reloadin/Cuss",CHAN_VOICE,1.0,0,ATTN_NORM);
							break;
					}
					break;
			}
			break;
		case 3:
			switch(funct)
			{
				case 0:
					switch(cussPack)
					{
						default:
							PlaySound(0,"Vixen/Kick",CHAN_VOICE,1.0,0,ATTN_NORM);
							break;
						case 1:
							PlaySound(0,"Vixen/Kick/NoCuss",CHAN_VOICE,1.0,0,ATTN_NORM);
							break;
						case 2:
							PlaySound(0,"Vixen/Kick/Cuss",CHAN_VOICE,1.0,0,ATTN_NORM);
							break;
					}
					break;
			}
			break;
	}
}