#library "MONSTER"
#include "zcommon.acs"
#include "commonFuncs.acs"
#include "remixerFuncs.acs"

#define PROTOZOID_BITE 4

#define KRIST_BASE 6000
#define NME_BASE 7000
#define TOM_BASE 8000
#define TOMSNAKE_BASE 9000
#define BIGJOHN_BASE 10000
#define SUMOBURNTIC 16

#define OSCURO_MODE_TIME 2

#define MAXPLAYERS 64
#define SKULLCOOLDOWNTID 1000

#define CLASSCOUNT		  34

#define MAX_RING_MONST 128
#define RING_MONST_BASE_TID		1000000		// base TIDs for SW ring monsters' objects

int ringcounter;
int krist_id = 0;
int nme_id = 0;

int serpringnum[MAX_RING_MONST];
int ringdur[MAX_RING_MONST];
int ringMonstTIDtrack[MAX_RING_MONST];		// track the TID-array index correspondence
int ringMonstCount = 0;

int sumofirecount[MAXPLAYERS];

str gameClassesSTR[CLASSCOUNT] = {
	"DoomguyClass", "ChexClass", "CorvusClass", "WolfenClass", "HexenClass", "DukeClass", "MarathonClass", "QuakeClass", "RottClass", "BlakeClass",
	"CalebClass", "StrifeClass", "EradClass", "C7Class", "RMRClass", "KatarnClass", "POGreedClass", "DisruptorClass", "WitchavenClass",
	"HalfLifeClass", "SWClass", "CMClass", "JonClass", "RRClass", "BittermanClass", "Hexen2Class", "BondClass", "CatacombClass", "PainkillerClass",
	"UnrealClass", "RTCWClass", "Q3Class", "DescentClass", "DeusExClass"
};

int ClassWeapons[CLASSCOUNT][9] =
{
	{   // Doomguy
		"notapplicable",
		"notapplicable",
		"notapplicable",
		" Chainsaw ",
		"Super Shotgun",
		" Chaingun ",
		"Rocket Launcher",
		"Plasma Rifle",
		"B.F.G. 9000",
	},
	{   // Chexguy
		"notapplicable",
		"notapplicable",
		"Chain-Lightning Zorcher",
		"Super Bootspork",
		"Super Large Zorcher",
		"Rapid Zorcher",
		"Zorch Propulsor",
		"Phasing Zorcher",
		"LAZ Device",
	},
	{   // Corvus
		"notapplicable",
		"Grim Ballista",
		"notapplicable",
		"Gauntlets of the Necromancer",
		"Ethereal Crossbow",
		"Dragon Claw",
		"Phoenix Rod",
		"Hellstaff",
		"DSparilStaff",
	},

	{   // B.J.
		"notapplicable",
		"notapplicable",
		"notapplicable",
		"BJSuperKnife",
		"Mauser Rifle",
		"  Chaingun  ",
		" Rocket Launcher ",
		" Flamethrower ",
		"Spear of Destiny",
	},

	{   // Parias
		"notapplicable",
		"notapplicable",
		"notapplicable",
		"PortFlechette",
		"Timon's Axe",
		"Serpent Staff",
		"Hammer of Retribution",
		"Firestorm",
		"Wraithverge",
	},

	{   // Duke
		"notapplicable",
		"notapplicable",
		"notapplicable",
		"Pipebombs",
		"Explosive Shotgun",
		"Chaingun Cannon",
		"RPG",
		"Freezethrower",
		"Devastator Weapon",
	},

	{   // Security Officer
		"notapplicable",
		"Alien Weapon",
		" Alien Weapon ",
		"KKV-7 SMG Flechette",
		"Fusion Pistol",
		"MA-75B Assault Rifle",
		"SPNKR-XP SSM Launcher",
		"TOZT-7 Napalm Unit",
		"ONI-71 Wave Motion Cannon",
	},

	{   // Ranger
		"notapplicable",
		"Laser Cannon",
		"notapplicable",
		"Mjolnir",
		"Grenade Launcher",
		"Nailgun",
		"  Rocket Launcher  ",
		"Super Nailgun",
		"Thunderbolt",
	},
	{   // I.P. Freely
		"Dark Staff",
		"Excalibat",
		"Split Missile",
		"Bazooka",
		"Heatseeker",
		"MP40",
		" FireBomb ",
		"DrunkMissiles",
		"Flamewall",
	},
	{	// Blake Stone
		"notapplicable",
		"notapplicable",
		"notapplicable",
		"BlakeSuperAutoCharge",
		"Heavy Assault Weapon",
		"Rapid Assault Weapon",
		"Plasma Discharge Unit",
		"Dual Neutron Disruptor",
		"Anti-Plasma Cannon",
	},
	{	// Caleb
		"Spraycan",
		"VoodooDoll",
		"notapplicable",
		"Dynamite",
		"SawedOff",
		"Tommygun",
		"NapalmLauncher",
		"TeslaCannon",
		"LifeLeech"	,
	},
	{   // Strifeguy
		"notapplicable",
		"notapplicable",
		"notapplicable",
		"StrifeBeaconItem5",
		"Mini Missile Launcher",
		"Assault Gun",
		" Grenade Launcher ",
		"Flame Thrower",
		" Mauler ",
	},
	{   // Eleena
		"notapplicable",
		"notapplicable",
		"notapplicable",
		" Arachnicator ",
		"Pellet Bomb",
		"  Dart Cannon  ",
		"	Missile Launcher	",
		"Napalm Charge",
		" Plasma Ball ",
	},
	{   // C7
		"notapplicable",
		"notapplicable",
		"notapplicable",
		"M24CAW",
		"AssaultShotgun",
		"AlienDualBlaster",
		"AlienPlasmaRifle",
		"AlienAssaultCannon",
		"AlienDisintegrator",
	},
	{   // RMR
		"notapplicable",
		"notapplicable",
		"notapplicable",
		"SamsaraRMRDirtsharkUpgrade",
		"ACR ADD-ON",
		"Cyclops Particle Accelerator",
		"RMR Grenade Launcher",
		"RMR Railgun",
		" RMR Plasma Cannon ",
	},
	{   // Kyle Katarn
		"notapplicable",
		"notapplicable",
		"notapplicable",
		"Thermal Detonator",
		"Fusion Cutter",
		"Imperial Repeater",
		"Mortar Gun",
		"Concussion Rifle",
		"Assault Cannon",
	},
	{	//Mooman
		"notapplicable",
		"notapplicable",
		"notapplicable",
		"IPOGGrenadeToken",
		" Plasma Shotgun ",
		" Fast Chaingun ",
		" Fast Rocket Launcher ",
		" Laser Cannon ",
		" Super Plasma Annihilator ",
	},
	{	//Jack
		"notapplicable",
		"notapplicable",
		"notapplicable",
		"SamsaraDisruptorHas18mmAuto",
		" AM Blaster ",
		"Phase Repeater",
		" Lock-on Cannon ",
		" AM Cyclone ",
		" Disruptor Zodiac ",
	},
	//+Added
	{	// Grondoval
		"notapplicable",
		"notapplicable",
		"notapplicable",
		"notapplicable",
		"Battle Axe",
		"Ice Halberd",
		"Fire Mace",
		"Frozen Two-Hand Sword",
		"Pike Axe",
	},
	{	//Freebutt
		"notapplicable",
		"HL Squeaks",
		"HL Crossbow",
		"Hornetgun",
		".357 Python",
		"MP5",
		" RPG ",
		"Gauss Cannon",
		"E.G.O.N.",
	},
	{   // Lo Wang
		"notapplicable",
		"SWRipperHeart",
		"notapplicable",
		"SWSticky",
		"SWGrenade",
		"SWUzi",
		"SWMissileLauncher",
		" SWRailgun ",
		"SWGuardianHead",
	},
	{   // Cybermage
		"notapplicable",
		"notapplicable",
		"notapplicable",
		"CMDarklightFoil",
		"CMBlastRifle",
		"CMSMG",
		"CMRocketGun",
		"CMHVBMG",
		"CMPlasmaGun",
	},
	{   // Jon
		"notapplicable",
		"Ring of Ra",
		"notapplicable",
		" Anubis Mine ",
		"PSFlamethrower",
		"PSM60",
		"PSCobraStaff",
		"Sacred Manacle",
		" Mummy Staff ",
	},
	{   // Leonard
		"notapplicable",
		" Hunting Rifle With Scope ",
		"notapplicable",
		" RR Rip Saw ",
		" Scattered Gun ",
		" Ranch Rifle ",
		" Dyn 'O' Mites ",
		" Alien Bra Gun ",
		" Alien Arm Cannon ",
	},
	{   // Bitterman
		"Q2Railgun",
		"Q2GrenadeLauncher",
		"Q2IonRipper",
		"Q2MachineGun",
		"Q2SuperShotgun",
		"Q2Chaingun",
		"Q2RocketLauncher",
		"Q2HyperBlaster",
		"Q2BFG10K",
	},
	{   // Demoness
		"notapplicable",
		"notapplicable",
		"notapplicable",
		"Hexen2IceMace",
		"Hexen2SpellBookMagicMissile",
		"Hexen2SpellBookBoneShard",
		"Hexen2FireRune",
		"Hexen2RavenStaff",
		"Hexen2TempestStaff",
	},
	{   // James Bond
		"notapplicable",
		"Goldeneye_SniperRifle",
		"Goldeneye_SilencedD5K",
		"Goldeneye_ThrowingKnives",
		"Goldeneye_AutoShotgun",
		"Goldeneye_AR33",
		"Goldeneye_RocketLauncher",
		"Goldeneye_RCP90",
		"Goldeneye_Moonraker",
	},
	{   // Petton Everhail
		"notapplicable",
		"notapplicable",
		"notapplicable",
		"Catacomb_WavesQuickSpell",
		"Catacomb_BurstsQuickSpell",
		"Catacomb_ZappersQuickSpell",
		"Catacomb_NukesQuickSpell",
		"Catacomb_BoltsQuickSpell",
		"Catacomb_AtomicQuickSpell",
	},
	{   // Daniel Garner
		"notapplicable",
		"notapplicable",
		"notapplicable",
		"Painkiller_StakeGun",
		"Painkiller_BoltGun",
		"Painkiller_Rifle",
		"Painkiller_RocketLauncher",
		"Painkiller_Electrodriver",
		"Painkiller_Tarot_GoldGiver",
	},
	{   // Prisoner 849
		"Unreal_Duster",
		"Unreal_GESBioRifle",
		"Unreal_Rifle",
		"Unreal_Razorjack",
		"Unreal_FlakCannon",
		"Unreal_Stinger",
		"Unreal_Eightball",
		"Unreal_Minigun",
		"Unreal_Redeemer",
	},
	{   // RTCW BJ
		"notapplicable",
		"RTCW_Sten",
		"RTCW_Winchester",
		"RTCW_Grenade",
		"RTCW_Mauser",
		"RTCW_FG42",
		"RTCW_Panzerfaust",
		"RTCW_Venom",
		"RTCW_TeslaGun",
	},
	{   // Sarge
		"Q3ProximityLauncher",
		"Q3Chaingun",
		"Q3RailGun",
		"Q3GrenadeLauncher",
		"Q3Nailgun",
		"Q3LightningGun",
		"Q3RocketLauncher",
		"Q3PlasmaGun",
		"Q3BFG10K",
	},
	{   // Pyro-GX
		"notapplicable",
		"DescentPlasma",
		"DescentPhoenix",
		"notapplicable",
		"DescentGauss",
		"DescentSpreadFire",
		"DescentFusion",
		"DescentHelix",
		"DescentOmega",
	},
	{   // JC Denton
		"DeusEx_NanoSword",
		"DeusEx_LAW",
		"DeusEx_SniperRifle",
		"DeusEx_MiniCrossbow",
		"DeusEx_AssaultShotgun",
		"DeusEx_AssaultRifle",
		"DeusEx_GEPGun",
		"DeusEx_FlameThrower",
		"DeusEx_MJ12PlasmaRifle",
	},
};

str SlotDummies[6] = {
	"GotWeapon0",
	"GotWeapon3",
	"GotWeapon4",
	"GotWeapon5",
	"GotWeapon6",
	"GotWeapon7",
};

str StoleDummies[9] = {
	"SamsaraUniquePickup3",
	"SamsaraUniquePickup1",
	"SamsaraUniquePickup2",
	"SamsaraSlotOneDrop",
	"SamsaraSlotThreeDrop",
	"SamsaraSlotFourDrop",
	"SamsaraSlotFiveDrop",
	"SamsaraSlotSixDrop",
	"SamsaraSlotSevenDrop",
};

script "spitz" (int value)
{
	PrintBold(d:value);
}

Script "LuckJump" (void)
{
	SetResultValue(random(0,256));
}

Script "Target_Angle" (void)
{
	int currentx = GetActorX(0);
	int currenty = GetActorY(0);
	int currentangle = GetActorAngle(0);
	SetActivator(0, AAPTR_Target);
	int vang = VectorAngle(GetActorX(0) - currentx, GetActorY(0) - currenty);
	int angle = ((vang - currentangle) % 1.0) / -182;
	//print(d:angle);
	SetResultValue(angle);
}

Script "WarpLoop" (void) //for when I need to simplify specificy corpse code
{
	if (ClassifyActor(0) == ACTOR_WORLD) {
		terminate;
	}

	//int currentx = GetActorX(0);
	//int currenty = GetActorY(0);
	//int currentz = GetActorZ(0);
	int oldTID, target, masterTID;
	oldTID = ActivatorTID();
	target = UniqueTID();
	Thing_ChangeTID(0, target);
	SetActivator(0, AAPTR_Master);
	masterTID = UniqueTID();
	Thing_ChangeTID(0, masterTID);

	SetActivator(target);
	Thing_ChangeTID(target, oldTID);

	/*if(abs(masterx - currentx) > (8<<16) || abs(mastery - currenty) > (8<<16) || abs(masterz - currentz) > (8<<16))
	{
		Warp(masterTID, 0, 0, 0, 0, WARPF_INTERPOLATE|WARPF_NOCHECKPOSITION);
	}*/

	do
	{
		int masterx = GetActorVelX(masterTID);
		int mastery = GetActorVelY(masterTID);
		int masterz = GetActorVelZ(masterTID);

		if (masterx != 0 || mastery != 0 || masterz != 0)
		{
			Warp(masterTID, 0, 0, 0, 0, WARPF_INTERPOLATE|WARPF_NOCHECKPOSITION);
		}

		Delay(4);
	} until (ClassifyActor(0) == ACTOR_WORLD);

	Thing_ChangeTID(masterTID, oldTID);
}

Script "MonsterProjectilePitch" (int x, int y, int z)
{
	SetActivator(0, AAPTR_Target);
	int currentx = GetActorX(0);
	int currenty = GetActorY(0);
	int currentz = GetActorZ(0);
	int vector2original = sqrt(x*x + y*y);
	int vector2target = sqrt(currentx*currentx + currenty*currenty);
	SetResultValue(VectorAngle(vector2target - vector2original, currentz - z));
}

Script "MonsterFaceTargetPitch" (int zoff)
{
	if(zoff == 0)
		zoff = GetActorProperty(0,APROP_Height)/2;
	int x = GetActorX(0);
	int y = GetActorY(0);
	int z = GetActorZ(0)+zoff;
	SetActivatorToTarget(0);
	int targX = GetActorX(0);
	int targY = GetActorY(0);
	int targZ = GetActorZ(0)-32.0;
	int distance = magnitudeThree_f(x - targX, y - targY, z - targZ);
	int pitch = VectorAngle(distance, z - targZ);
	SetResultValue(-pitch/182);
}

// Generic resurrection script, moved into ACS to allow the timer to run on infinite duration states
Script "ReMixer_SelfRevive" (int totalWaitTime, int chanceRevive, int maxRevives)
{
	int reviveCount = CheckInventory("SelfReviveCounter");

	if (maxRevives > 0 && reviveCount >= maxRevives || Random(0,255) >= chanceRevive)
	{
		TakeInventory("SelfReviveCounter", reviveCount);
		terminate;
	}

	GiveInventory("NeverRespawnToken", 1);

	while (totalWaitTime > 0)
	{
		if ((ClassifyActor(0) & ACTOR_WORLD) || (ClassifyActor(0) & ACTOR_ALIVE)) { terminate; } // ACTOR_WORLD = invasion server crash fix

		int delayTime = min(totalWaitTime, 35);

		Delay(delayTime);
		totalWaitTime -= delayTime;
	}

    if (ClassifyActor(0) & ACTOR_WORLD) { terminate; } // ACTOR_WORLD = invasion server crash fix

	reviveCount = CheckInventory("SelfReviveCounter");

	Thing_Raise(0);

	GiveInventory("AllowRespawnToken", 1);

	if (ClassifyActor(0) & ACTOR_ALIVE)
	{
		GiveInventory("SelfReviveCounter", 1);
	}
	else // If the resurrection failed, then clear revive tokens in case the actor respawns or resurrects through other means
	{
		TakeInventory("SelfReviveCounter", reviveCount);
	}
}

Script "Samsara_SetSpeed" (int input)
{
	SetActorProperty(0, APROP_Speed, input*1.0);
	SetResultValue(1);
}

Script "SamsaraMixer_PlayerDeath" Death
{
	int ptid = UniqueTid();
	Thing_ChangeTid(0,ptid);
	SetActivator(0,AAPTR_Target);
	switch(CheckInventory("SamsaraMixerMonsterDeathScriptToken"))
	{
		case 1:
			SetActivator(ptid,AAPTR_Default);
			Thing_ChangeTid(ptid,0);
			ACS_NamedExecuteWithResult("RR_DoylePiss",0,0,0,0);
			break;
		default:
			Thing_ChangeTid(ptid,0);
			break;
	}
}

Script "ReMixer_Korax" (void)
{
	int executedDoors;
	//Currently necessitated by Zandronum
	if(GetActorProperty(0,APROP_Health) > 50000000)
		terminate;
	while(true)
	{
		if(!executedDoors && GetActorProperty(0,APROP_Health) < GetActorProperty(0,APROP_SpawnHealth) / 2)
		{
			executedDoors = 1;
			ACS_Execute(249,0,0,0,0);
			ACS_Execute(252,0,0,0,0);
		}
		if(random(0,512)==0)
			ACS_Execute(random(250,251),0,0,0,0);
		else if(random(0,512)==1)
			ACS_Execute(random(253,254),0,0,0,0);

		Delay(1);
	}
}

#include "m_blood.acs"
#include "m_df.acs"
#include "m_duke.acs"
#include "m_ge.acs"
#include "m_hexen2.acs"
#include "m_hl.acs"
#include "m_hrtc.acs"
#include "m_q2.acs"
#include "m_rott.acs"
#include "m_rr.acs"
#include "m_sw.acs"
#include "m_vdr.acs"
#include "m_painkiller.acs"

//I have no idea why we need this. A major lag spikes occurs without this array being defined anymore, for mysterious reasons
Str FuckYou[12][128] = 
{
	{
		"RTCW_Humanoid_InfantrySS_BodyEscape",
		"RTCW_Humanoid_InfantrySS_Blink",
		"RTCW_Humanoid_InfantrySS_Head0",
		"RTCW_Humanoid_InfantrySS_Head1",
		"RTCW_Humanoid_InfantrySS_Head2",
		"RTCW_Humanoid_InfantrySS_Head3",
		"RTCW_Humanoid_InfantrySS_Head4",
		"RTCW_Humanoid_InfantrySS_Head5",
		"RTCW_Humanoid_InfantrySS_Head6",
		"RTCW_Humanoid_InfantrySS_Head7",
		"RTCW_Humanoid_InfantrySS_Head8",
		"RTCW_Humanoid_InfantrySS_Head9",
		"RTCW_Humanoid_InfantrySS_Head10",
		"RTCW_Humanoid_InfantrySS_Head11",
		"RTCW_Humanoid_InfantrySS_Head12",
		"RTCW_Humanoid_InfantrySS_Head13",
		"RTCW_Humanoid_InfantrySS_Head14",
		"RTCW_Humanoid_InfantrySS_Head15",
		"RTCW_Humanoid_InfantrySS_Head16",
		"RTCW_Humanoid_InfantrySS_Head17",
		"RTCW_Humanoid_InfantrySS_Helmet",
		"RTCW_Humanoid_InfantrySS_CapEscape",
		"RTCW_Humanoid_InfantrySS_HeadSet",
		"RTCW_Humanoid_InfantrySS_AmmoBelt1L",
		"RTCW_Humanoid_InfantrySS_MP40Belt1L",
		"RTCW_Humanoid_InfantrySS_AmmoBelt1R",
		"RTCW_Humanoid_InfantrySS_MP40Belt1R",
		"RTCW_Humanoid_InfantrySS_Luger",
		"RTCW_Humanoid_InfantrySS_MP40",
		"RTCW_Humanoid_InfantrySS_Mauser",
		"RTCW_Humanoid_InfantrySS_LugerFlash",
		"RTCW_Humanoid_InfantrySS_MP40Flash",
		"RTCW_Humanoid_InfantrySS_MauserFlash",
		"RTCW_Humanoid_InfantrySS_BodySnow",
		"RTCW_Humanoid_InfantrySS_HeadSnow1",
		"RTCW_Humanoid_InfantrySS_HeadSnow2",
		"RTCW_Humanoid_InfantrySS_HelmetSnow",
		"RTCW_Humanoid_InfantrySS_CapVillage",
		"RTCW_Humanoid_InfantrySS_AmmoBelt1SNL",
		"RTCW_Humanoid_InfantrySS_MP40Belt1SNL",
		"RTCW_Humanoid_InfantrySS_AmmoBelt1SNR",
		"RTCW_Humanoid_InfantrySS_MP40Belt1SNR",
		"RTCW_Humanoid_InfantrySS_BodyVillage",
		"RTCW_Humanoid_InfantrySS_Helmet1",
		"RTCW_Humanoid_InfantrySS_BodyCrypt",
		"RTCW_Humanoid_InfantrySS_HeadCrypt1",
		"RTCW_Humanoid_InfantrySS_HeadCrypt2",
		"RTCW_Humanoid_InfantrySS_HeadCrypt3",
		"RTCW_Humanoid_InfantrySS_HeadCrypt4",
		"RTCW_Humanoid_InfantrySS_Helmet2",
		"RTCW_Humanoid_InfantrySS_CapCrypt",
		"RTCW_Humanoid_InfantrySS_FieldGearL",
		"RTCW_Humanoid_InfantrySS_MP40Belt1DL",
		"RTCW_Humanoid_InfantrySS_FieldGearR",
		"RTCW_Humanoid_InfantrySS_MP40Belt1DR",
		"RTCW_Humanoid_InfantrySS_FieldKit",
		"RTCW_Humanoid_InfantrySS_BodyChurch1",
		"RTCW_Humanoid_InfantrySS_BodyChurch2",
		"RTCW_Humanoid_InfantrySS_HelmetSFM",
		"RTCW_Humanoid_InfantrySS_CapChurch",
		"RTCW_Humanoid_InfantrySS_BodyCamo1",
		"RTCW_Humanoid_InfantrySS_BodyCamo2",
		"RTCW_Humanoid_InfantrySS_CapEscape",
		"RTCW_Humanoid_InfantrySS_HelmetForest",
		"RTCW_Humanoid_InfantrySS_BodyRocket",
		"RTCW_Humanoid_InfantrySS_HelmetRocket",
		"RTCW_Humanoid_InfantrySS_CapRocket",
		"RTCW_Humanoid_InfantrySS_BodyBase",
		"RTCW_Humanoid_InfantrySS_BodyTrenchBase",
		"RTCW_Humanoid_InfantrySS_Helmet3",
		"RTCW_Humanoid_InfantrySS_Cap",
		"RTCW_Humanoid_InfantrySS_FieldGearB",
		"RTCW_Humanoid_InfantrySS_Panzerfaust",
		"RTCW_Humanoid_InfantrySS_PanzerfaustFlash",
		"RTCW_Humanoid_InfantrySS_BodySFM",
		"RTCW_Humanoid_InfantrySS_HeadSFM1",
		"RTCW_Humanoid_InfantrySS_HeadSFM2",
		"RTCW_Humanoid_InfantrySS_HeadSFM3",
		"RTCW_Humanoid_InfantrySS_CapSFM",
		"RTCW_Humanoid_InfantrySS_BlinkSFM1",
		"RTCW_Humanoid_InfantrySS_BlinkSFM2",
		"RTCW_Humanoid_InfantrySS_BlinkSFM3",
		"RTCW_Humanoid_InfantrySS_BodyXLabs",
		"RTCW_Humanoid_InfantrySS_HelmetXLabs",
		"RTCW_Humanoid_InfantrySS_CapXLabs",
		"RTCW_Humanoid_InfantrySS_BodyTrenchDam1",
		"RTCW_Humanoid_InfantrySS_BodyTrenchDam2",
		"RTCW_Humanoid_InfantrySS_BodySSVillage",
		"RTCW_Humanoid_InfantrySS_Sten",
		"RTCW_Humanoid_InfantrySS_BodyTrenchBase",
	},
	{
		"RTCW_Humanoid_OfficerSS_BodyEscape1",
		"RTCW_Humanoid_OfficerSS_BodyEscape2",
		"RTCW_Humanoid_OfficerSS_Head1",
		"RTCW_Humanoid_OfficerSS_Head2",
		"RTCW_Humanoid_OfficerSS_Head3",
		"RTCW_Humanoid_OfficerSS_Head4",
		"RTCW_Humanoid_OfficerSS_Head5",
		"RTCW_Humanoid_OfficerSS_Head6",
		"RTCW_Humanoid_OfficerSS_Blink",
		"RTCW_Humanoid_OfficerSS_Cap4",
		"RTCW_Humanoid_OfficerSS_Cap5",
		"RTCW_Humanoid_OfficerSS_Glasses",
		"RTCW_Humanoid_OfficerSS_BeltL",
		"RTCW_Humanoid_OfficerSS_BeltR",
		"RTCW_Humanoid_OfficerSS_BodyVillage",
		"RTCW_Humanoid_OfficerSS_BodyForest",
		"RTCW_Humanoid_OfficerSS_Cap3",
		"RTCW_Humanoid_OfficerSS_BodySSVillage",
		"RTCW_Humanoid_OfficerSS_BodyChateau1",
		"RTCW_Humanoid_OfficerSS_BodyChateau2",
		"RTCW_Humanoid_OfficerSS_BlinkHimmler",
		"RTCW_Humanoid_OfficerSS_HeadHimmler",
		"RTCW_Humanoid_OfficerSS_GlassesHimmler",
	},
	{
		"RTCW_Humanoid_Scientist_BodyDefault",
		"RTCW_Humanoid_Scientist_Head1",
		"RTCW_Humanoid_Scientist_Head2",
		"RTCW_Humanoid_Scientist_Head3",
		"RTCW_Humanoid_Scientist_Head4",
		"RTCW_Humanoid_Scientist_Head5",
		"RTCW_Humanoid_Scientist_Head6",
		"RTCW_Humanoid_Scientist_Head7",
		"RTCW_Humanoid_Scientist_Blink1",
		"RTCW_Humanoid_Scientist_Glasses",
		"RTCW_Humanoid_Scientist_Blink2",
		"RTCW_Humanoid_Scientist_Goggles",
		"RTCW_Humanoid_Scientist_Luger",
		"RTCW_Humanoid_Scientist_LugerFlash",
		"RTCW_Humanoid_Scientist_BodyRocket",
		"RTCW_Humanoid_Scientist_Headset",
		"RTCW_Humanoid_Scientist_Badge",
		"RTCW_Humanoid_Scientist_Belt",
		"RTCW_Humanoid_Scientist_BodySWF",
		"RTCW_Humanoid_Scientist_BodyXLabs",
		"RTCW_Humanoid_Scientist_BodyMystic",
		"RTCW_Humanoid_Scientist_HeadMystic",
		"RTCW_Humanoid_Scientist_Blink3",
		"RTCW_Humanoid_Scientist_BodyXLabs",
		"RTCW_Humanoid_Mechanic_BodyDefault",
		"RTCW_Humanoid_Mechanic_BodyRocket",
		"RTCW_Humanoid_Mechanic_BodySWF",
		"RTCW_Humanoid_Mechanic_BodyRadio",
		"RTCW_Humanoid_Mechanic_Head1",
		"RTCW_Humanoid_Mechanic_Head2",
		"RTCW_Humanoid_Mechanic_Head3",
		"RTCW_Humanoid_Mechanic_Blink1",
		"RTCW_Humanoid_Mechanic_Blink3",
		"RTCW_Humanoid_Mechanic_Cap",
		"RTCW_Humanoid_Mechanic_Headset",
		"RTCW_Humanoid_Mechanic_Luger",
		"RTCW_Humanoid_Mechanic_LugerFlash",
	},
	{
		"RTCW_Humanoid_EliteGuard_Body1",
		"RTCW_Humanoid_EliteGuard_Body2",
		"RTCW_Humanoid_EliteGuard_Body3",
		"RTCW_Humanoid_EliteGuard_Head1",
		"RTCW_Humanoid_EliteGuard_Head2",
		"RTCW_Humanoid_EliteGuard_Head3",
		"RTCW_Humanoid_EliteGuard_Head4",
		"RTCW_Humanoid_EliteGuard_Head5",
		"RTCW_Humanoid_EliteGuard_BodyCastle1",
		"RTCW_Humanoid_EliteGuard_BodyCastle2",
		"RTCW_Humanoid_EliteGuard_HeadCastle1",
		"RTCW_Humanoid_EliteGuard_HeadCastle2",
		"RTCW_Humanoid_EliteGuard_HeadCastle3",
		"RTCW_Humanoid_EliteGuard_HeadCastle4",
		"RTCW_Humanoid_EliteGuard_HeadCastle5",
		"RTCW_Humanoid_EliteGuard_Hair1",
		"RTCW_Humanoid_EliteGuard_Hair2",
		"RTCW_Humanoid_EliteGuard_Hair3",
		"RTCW_Humanoid_EliteGuard_Hair4",
		"RTCW_Humanoid_EliteGuard_Hair5",
		"RTCW_Humanoid_EliteGuard_Glasses",
		"RTCW_Humanoid_EliteGuard_Beret",
		"RTCW_Humanoid_EliteGuard_Blink1",
		"RTCW_Humanoid_EliteGuard_Blink2",
		"RTCW_Humanoid_EliteGuard_Blink3",
		"RTCW_Humanoid_EliteGuard_Blink4",
		"RTCW_Humanoid_EliteGuard_Blink5",
		"RTCW_Humanoid_EliteGuard_Sten",
		"RTCW_Humanoid_EliteGuard_Mauser",
		"RTCW_Humanoid_EliteGuard_MauserFlash",
		"RTCW_Humanoid_EliteGuard_Panzerfaust",
		"RTCW_Humanoid_EliteGuard_PanzerfaustFlash",
		"RTCW_Humanoid_Helga_Body",
		"RTCW_Humanoid_Helga_Head",
		"RTCW_Humanoid_Helga_Blink",
		"RTCW_Humanoid_Priestess_Body",
		"RTCW_Humanoid_Priestess_Head",
		"RTCW_Humanoid_Priestess_Blink",
		"RTCW_Humanoid_Priestess_FG42",
		"RTCW_Humanoid_Priestess_FG42Flash",
	},
	{
		"RTCW_Humanoid_BlackGuard_Body1",
		"RTCW_Humanoid_BlackGuard_Blink",
		"RTCW_Humanoid_BlackGuard_Head1",
		"RTCW_Humanoid_BlackGuard_Head2",
		"RTCW_Humanoid_BlackGuard_Head3",
		"RTCW_Humanoid_BlackGuard_Head4",
		"RTCW_Humanoid_BlackGuard_Head5",
		"RTCW_Humanoid_BlackGuard_Head6",
		"RTCW_Humanoid_BlackGuard_Head7",
		"RTCW_Humanoid_BlackGuard_Goggles",
		"RTCW_Humanoid_BlackGuard_GogglesGlass",
		"RTCW_Humanoid_BlackGuard_Backpack",
		"RTCW_Humanoid_BlackGuard_Helmet",
		"RTCW_Humanoid_BlackGuard_FieldCap",
		"RTCW_Humanoid_BlackGuard_FG42",
		"RTCW_Humanoid_BlackGuard_MauserSniper",
		"RTCW_Humanoid_BlackGuard_FG42Flash",
		"RTCW_Humanoid_BlackGuard_MauserFlash",
		"RTCW_Humanoid_BlackGuard_BodyTrainyard",
		"RTCW_Humanoid_BlackGuard_Blink",
		"RTCW_Humanoid_BlackGuard_HelmetTrainyard",
		"RTCW_Humanoid_BlackGuard_Panzerfaust",
		"RTCW_Humanoid_BlackGuard_PanzerfaustFlash",
		"RTCW_Humanoid_BlackGuard_BodySWF",
		"RTCW_Humanoid_BlackGuard_Blink",
		"RTCW_Humanoid_BlackGuard_HelmetSWF",
		"RTCW_Humanoid_BlackGuard_BodySnow",
		"RTCW_Humanoid_BlackGuard_GogglesGlassSnow",
		"RTCW_Humanoid_BlackGuard_BackpackSnow",
		"RTCW_Humanoid_BlackGuard_HelmetSnow",
		"RTCW_Humanoid_BlackGuard_Body2",
		"RTCW_Humanoid_BlackGuard_Venom",
		"RTCW_Humanoid_BlackGuard_VenomFlash",
		"RTCW_Humanoid_BlackGuard_BodyCastle",
		"RTCW_Humanoid_BlackGuard_HeadCastle",
	},
	{
		"RTCW_Humanoid_Venom_BodyDefault",
		"RTCW_Humanoid_Venom_BodyFactory",
		"RTCW_Humanoid_Venom_BodySnow",
		"RTCW_Humanoid_Venom_Glass",
		"RTCW_Humanoid_Venom_GlassSnow",
		"RTCW_Humanoid_Venom_Venom",
		"RTCW_Humanoid_Venom_Flamethrower",
		"RTCW_Humanoid_Venom_VenomFlash",
		"RTCW_Humanoid_Venom_FlamethrowerNozzle",
		"RTCW_Humanoid_Deathshead_Body",
		"RTCW_Humanoid_Deathshead_Head",
		"RTCW_Humanoid_Deathshead_Blink",
		"RTCW_Humanoid_Deathshead_Monacle",
		"RTCW_Humanoid_Deathshead_Tesla",
	},
	{
		"RTCW_Zombie_Body1",
		"RTCW_Zombie_Body2",
		"RTCW_Zombie_Body3",
		"RTCW_Zombie_Body4",
		"RTCW_Zombie_Head1",
		"RTCW_Zombie_Head2",
		"RTCW_Zombie_Head3",
		"RTCW_Zombie_Head4",
		"RTCW_Zombie_Hair",
		"RTCW_Zombie_Helmet",
		"RTCW_Zombie_Body5",
		"RTCW_Zombie_Head5",
	},
	{
		"RTCW_Drone_Body",
		"RTCW_Drone_Transparent",
		"RTCW_Drone_Flash",
	},
	{
		"RTCW_Loper_Body1",
		"RTCW_Loper_Body2",
		"RTCW_Loper_Shock",
	},
	{
		"RTCW_ProtoSoldier_Body",
		"RTCW_ProtoSoldier_Armor_DamCalfLeft", 
		"RTCW_ProtoSoldier_Armor_DamCalfRight", 
		"RTCW_ProtoSoldier_Armor_DamChest", 
		"RTCW_ProtoSoldier_Armor_DamForearmLeft",
		"RTCW_ProtoSoldier_Armor_DamForearmRight", 
		"RTCW_ProtoSoldier_Armor_DamShoulderLeft", 
		"RTCW_ProtoSoldier_Armor_DamShoulderRight",
		"RTCW_ProtoSoldier_Armor_DamThighLeft", 
		"RTCW_ProtoSoldier_Armor_DamThighRight",
		"RTCW_ProtoSoldier_Scrap_CalfLeft", 
		"RTCW_ProtoSoldier_Scrap_CalfRight", 
		"RTCW_ProtoSoldier_Scrap_Chest", 
		"RTCW_ProtoSoldier_Scrap_ForearmLeft",
		"RTCW_ProtoSoldier_Scrap_ForearmRight", 
		"RTCW_ProtoSoldier_Scrap_ShoulderLeft", 
		"RTCW_ProtoSoldier_Scrap_ShoulderRight",
		"RTCW_ProtoSoldier_Scrap_ThighLeft", 
		"RTCW_ProtoSoldier_Scrap_ThighRight",
	},
	{
		"RTCW_SuperSoldier_GunFlash",
		"RTCW_SuperSoldier_GunFlash",
		"RTCW_SuperSoldier_Body",
		"RTCW_SuperSoldier_Armor_DamCalfLeft1", 
		"RTCW_SuperSoldier_Armor_DamCalfRight1", 
		"RTCW_SuperSoldier_Armor_Chest", 
		"RTCW_SuperSoldier_Armor_DamFootLeft1", 
		"RTCW_SuperSoldier_Armor_DamFootRight1",
		"RTCW_SuperSoldier_Armor_DamForearmLeft1",
		"RTCW_SuperSoldier_Armor_DamForearmRight1", 
		"RTCW_SuperSoldier_Armor_KneeLeft", 
		"RTCW_SuperSoldier_Armor_KneeRight", 
		"RTCW_SuperSoldier_Armor_DamShoulderLeft1", 
		"RTCW_SuperSoldier_Armor_DamShoulderRight1",
		"RTCW_SuperSoldier_Armor_DamThighLeft1", 
		"RTCW_SuperSoldier_Armor_DamThighRight1", 
		"RTCW_SuperSoldier_Armor_DamUpperArmLeft1", 
		"RTCW_SuperSoldier_Armor_DamUpperArmRight1", 
		"RTCW_SuperSoldier_Armor_DamWaist1",
		"RTCW_SuperSoldier_Armor_DamCalfLeft2", 
		"RTCW_SuperSoldier_Armor_DamCalfRight2", 
		"RTCW_SuperSoldier_Armor_DamChest2", 
		"RTCW_SuperSoldier_Armor_DamFootLeft2", 
		"RTCW_SuperSoldier_Armor_DamFootRight2", 
		"RTCW_SuperSoldier_Armor_DamForearmLeft2",
		"RTCW_SuperSoldier_Armor_DamForearmRight2", 
		"RTCW_SuperSoldier_Armor_DamShoulderLeft2", 
		"RTCW_SuperSoldier_Armor_DamShoulderRight2",
		"RTCW_SuperSoldier_Armor_DamThighLeft2", 
		"RTCW_SuperSoldier_Armor_DamThighRight2", 
		"RTCW_SuperSoldier_Armor_DamUpperArmLeft2", 
		"RTCW_SuperSoldier_Armor_DamUpperArmRight2", 
		"RTCW_SuperSoldier_Armor_DamWaist2",
		"RTCW_SuperSoldier_Scrap_CalfLeft1", 
		"RTCW_SuperSoldier_Scrap_CalfRight1", 
		"RTCW_SuperSoldier_Scrap_Chest1", 
		"RTCW_SuperSoldier_Scrap_FootLeft1", 
		"RTCW_SuperSoldier_Scrap_FootRight1", 
		"RTCW_SuperSoldier_Scrap_ForearmLeft1",
		"RTCW_SuperSoldier_Scrap_ForearmRight1", 
		"RTCW_SuperSoldier_Scrap_KneeLeft", 
		"RTCW_SuperSoldier_Scrap_KneeRight", 
		"RTCW_SuperSoldier_Scrap_ShoulderLeft1", 
		"RTCW_SuperSoldier_Scrap_ShoulderRight1",
		"RTCW_SuperSoldier_Scrap_ThighLeft1", 
		"RTCW_SuperSoldier_Scrap_ThighRight1", 
		"RTCW_SuperSoldier_Scrap_UpperArmLeft1", 
		"RTCW_SuperSoldier_Scrap_UpperArmRight1", 
		"RTCW_SuperSoldier_Scrap_Waist1",
		"RTCW_SuperSoldier_Scrap_CalfLeft2", 
		"RTCW_SuperSoldier_Scrap_CalfRight2", 
		"RTCW_SuperSoldier_Scrap_Chest2", 
		"RTCW_SuperSoldier_Scrap_FootLeft2", 
		"RTCW_SuperSoldier_Scrap_FootRight2", 
		"RTCW_SuperSoldier_Scrap_ForearmLeft2",
		"RTCW_SuperSoldier_Scrap_ForearmRight2", 
		"RTCW_SuperSoldier_Scrap_ShoulderLeft2", 
		"RTCW_SuperSoldier_Scrap_ShoulderRight2",
		"RTCW_SuperSoldier_Scrap_ThighLeft2", 
		"RTCW_SuperSoldier_Scrap_ThighRight2", 
		"RTCW_SuperSoldier_Scrap_UpperArmLeft2", 
		"RTCW_SuperSoldier_Scrap_UpperArmRight2", 
		"RTCW_SuperSoldier_Scrap_Waist2"
	}
};
