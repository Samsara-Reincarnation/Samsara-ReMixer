Script "Hexen2_PraevusTeleport" (int mode)
{
	int fire;
	int rotationspeed = 4550;
	if(mode == 0)
	{
		while(CheckInventory("Hexen2PraevusTeleportToken"))
		{
			if(GetActorProperty(0,APROP_ScaleX) >= 0.025)
			{
				SetActorProperty(0,APROP_ScaleX, GetActorProperty(0,APROP_ScaleX)-0.025);
				SetActorProperty(0,APROP_ScaleY, GetActorProperty(0,APROP_ScaleY)-0.025);
			}
			else
			{
				SetActorProperty(0,APROP_ScaleX, 0);
				SetActorProperty(0,APROP_ScaleY, 0);
			}
			if(GetActorProperty(0,APROP_ScaleX) >= 0.2 && GetActorProperty(0,APROP_ScaleX) <= 0.3 && fire == 0 && GetActorClass(0) != "Hexen2PraevusShield")
			{
				fire = 1;
				SpawnSpotForced("Hexen2PraevusTeleportFire",0,0,0);
			}
			Delay(1);
		}
	}
	else if(mode == 1)
	{
		while(CheckInventory("Hexen2PraevusTeleportOutToken"))
		{
			if(GetActorProperty(0,APROP_ScaleX) < 0.2  && fire == 0 && GetActorClass(0) != "Hexen2PraevusShield")
			{
				fire = 1;
				SpawnSpotForced("Hexen2PraevusTeleportFire",0,0,0);
			}
			if(GetActorProperty(0,APROP_ScaleX) < 1.0)
			{
				SetActorProperty(0,APROP_ScaleX, GetActorProperty(0,APROP_ScaleX)+0.025);
				SetActorProperty(0,APROP_ScaleY, GetActorProperty(0,APROP_ScaleY)+0.025);
			}
			Delay(1);
		}
	}
	else if(mode == 2)
	{
		while(CheckInventory("Hexen2PraevusTeleportRotationToken"))
		{
			SetActorAngle(0,GetActorAngle(0)+rotationspeed);
			Delay(1);
		}
	}
}

Script "Hexen2_PraevusShield" (void)
{
	int delaytimer;
	while(ClassifyActor(0) & ACTOR_ALIVE)
	{
		if(CheckInventory("Hexen2PraevusTeleportChildToken"))
		{
			if(!delaytimer)
			{
				delaytimer = 1;
				GiveInventory("Hexen2PraevusTeleportShieldInToken",1);
				GiveInventory("Hexen2PraevusTeleportToken",1);
				Delay(26);
				ACS_NamedExecuteAlways("Hexen2_PraevusTeleport",0,0,0,0);
			}
			if(CheckInventory("Hexen2PraevusTeleportChildOutToken"))
			{
				if(!CheckInventory("Hexen2PraevusTeleportOutToken"))
				{
					GiveInventory("Hexen2PraevusTeleportOutToken",1);
					TakeInventory("Hexen2PraevusTeleportToken",1);
					ACS_NamedExecuteAlways("Hexen2_PraevusTeleport",0,1,0,0);
				}
				if(GetActorProperty(0,APROP_ScaleX) >= 1.0)
				{
					delaytimer = 0;
					SetActorProperty(0,APROP_ScaleX, 1.0);
					SetActorProperty(0,APROP_ScaleY, 1.0);
					GiveInventory("Hexen2PraevusTeleportShieldOutToken",1);
					TakeInventory("Hexen2PraevusTeleportOutToken",1);
					TakeInventory("Hexen2PraevusTeleportChildToken",1);
					TakeInventory("Hexen2PraevusTeleportChildOutToken",1);
					TakeInventory("Hexen2PraevusTeleportToken",1);
					Delay(18);
				}
			}
		}
		Delay(1);
	}
}

Script "Hexen2_PraevusLifeTime" (void)
{
	int dmgtime;
	int oldhealth, spawnhealth;
	While(ClassifyActor(0) & ACTOR_ALIVE)
	{
		oldhealth = GetActorProperty(0,APROP_Health);
		spawnhealth = GetActorProperty(0,APROP_SpawnHealth);
		//PrintBold(s:"Damage Time: ",d:dmgtime,s:" Health: ",d:oldhealth,s:" Spawn Health: ",d:spawnhealth);
		if(oldhealth < FixedMul(spawnhealth,0.2) && dmgtime == 3)
		{
			dmgtime++;
			SetActorState(0,"Recharge",true);
		}
		else if(oldhealth < FixedMul(spawnhealth,0.4) && dmgtime == 2)
		{
			dmgtime++;
			SetActorState(0,"Recharge",true);
		}
		else if(oldhealth < FixedMul(spawnhealth,0.6) && dmgtime == 1)
		{
			dmgtime++;
			SetActorState(0,"Recharge",true);
		}
		else if(oldhealth < FixedMul(spawnhealth,0.8) && dmgtime == 0)
		{
			dmgtime++;
			SetActorState(0,"Recharge",true);
		}
		Delay(1);
		if(oldhealth > GetActorProperty(0,APROP_Health))
			PlaySound(0,GetActorProperty(0,APROP_PainSound),CHAN_VOICE,1.0,0,ATTN_NONE);
	}
}

Script "Hexen2_BossDeath" (int mode)
{
	if(mode == 0)
	{
		int count;
		int newtid = UniqueTid();
		SpawnForced("Hexen2BossDeathCircle1",GetActorX(0),GetActorY(0),GetActorZ(0)+25.0,newtid,GetActorAngle(0));
		PlaySound(newtid,"Hexen2/Horseman/Flashdie",CHAN_BODY,1.0,0,ATTN_NORM);
		While(count < 8)
		{
			SpawnForced("Hexen2BossDeathShaft",GetActorX(0),GetActorY(0),GetActorZ(0)+25.0,newtid,0);
			count++;
			Delay(7);
		}
		While(!(ClassifyActor(0) & ACTOR_WORLD))
		{
			//yes, the circle is supposed to spawn this, but we can only make this work by putting it here instead
			//SpawnForced("Hexen2BossDeathStar",GetActorX(0),GetActorY(0),GetActorZ(0)+25.0,newtid,random(0,65536));
			//SpawnProjectile(0,"Hexen2BossDeathStar",random(0,65536),30,0,0,newtid);
			if(CheckInventory("Hexen2PraevusFlashToken"))
			{
				StopSound(newtid,CHAN_BODY);
				fadetobold(255,255,255,1.0,0.25);
				Delay(16);
				Thing_Remove(newtid);
				fadetobold(255,255,255,0.0,0.25);
				terminate;
			}
			Delay(2);
		}
	}
	else if(mode == 1)
	{
		int beamdirection;
		int beammaxscale = random(0.5,1.5);
		int beamspeed = random(2,5);
		int anglea = random(0,65536);
		int angleb = random(3605,23655);
		if(random(0,10) > 5)
			beamdirection = 1;
		while(true)
		{
			if(GetActorProperty(0,APROP_ScaleX) < beammaxscale)
			{
				SetActorProperty(0,APROP_ScaleX,GetActorProperty(0,APROP_ScaleX)+0.6);
				SetActorProperty(0,APROP_ScaleY,GetActorProperty(0,APROP_ScaleY)+0.6);
			}
			else
			{
				SetActorProperty(0,APROP_ScaleX,beammaxscale);
				SetActorProperty(0,APROP_ScaleY,beammaxscale);
			}
			
			if(beamdirection)
				anglea += beamspeed*182;
			else
				anglea -= beamspeed*182;
			
			SetActorAngle(0,FixedMul(cos(anglea),angleb));
			SetActorPitch(0,FixedMul(sin(anglea),angleb));
			Delay(2);
		}
	}
	else if(mode == 2)
	{
		int stage;
		while(!(ClassifyActor(0) & ACTOR_WORLD))
		{
			GiveInventory("Hexen2BossDeathStarSpawner",1);
			if(stage == 0)
			{
				SetActorProperty(0,APROP_ScaleX,FixedMul(GetActorProperty(0,APROP_ScaleX),1.0275));
				SetActorProperty(0,APROP_ScaleY,FixedMul(GetActorProperty(0,APROP_ScaleY),1.0275));
				if(GetActorProperty(0,APROP_ScaleX) >= 2.5)
				{
					stage = 1;
					SetActorProperty(0,APROP_ScaleX,2.5);
					SetActorProperty(0,APROP_ScaleY,2.5);
				}
			}
			else if(stage == 1)
			{
				SetActorProperty(0,APROP_ScaleX,GetActorProperty(0,APROP_ScaleX)-0.1);
				SetActorProperty(0,APROP_ScaleY,GetActorProperty(0,APROP_ScaleY)-0.1);
				if(GetActorProperty(0,APROP_ScaleX) < 1.5 || random(0,10) < 1)
					stage = 2;
			}
			else if(stage == 2)
			{
				SetActorProperty(0,APROP_ScaleX,GetActorProperty(0,APROP_ScaleX)+(0.01*random(1,10)));
				SetActorProperty(0,APROP_ScaleY,GetActorProperty(0,APROP_ScaleY)+(0.01*random(1,10)));
				if(GetActorProperty(0,APROP_ScaleX) >= 2.5)
				{
					stage = 1;
					SetActorProperty(0,APROP_ScaleX,2.5);
					SetActorProperty(0,APROP_ScaleY,2.5);
				}
				else if(random(0,10) < 1)
				{
					stage = 1;
				}
			}
			Delay(2);
		}
	}
	else if(mode == 3)
	{
		int time; //implementing this to prevent the effect from going on too long
		While(!(ClassifyActor(0) & ACTOR_WORLD) && time < 105)
		{
			time++;
			SetActorVelocity(0,FixedMul(GetActorVelX(0),1.05),FixedMul(GetActorVelY(0),1.05),0,0,0);
			if(GetActorProperty(0,APROP_ScaleX) < 2.0)
			{
				SetActorProperty(0,APROP_ScaleX,FixedMul(GetActorProperty(0,APROP_ScaleX),1.08));
				SetActorProperty(0,APROP_ScaleY,FixedMul(GetActorProperty(0,APROP_ScaleY),1.08));
			}
			Delay(2);
		}		
		Thing_Remove(0);
		terminate;
	}
}

Script "Hexen2_LastAttacked" (int time)
{
	GiveInventory("Hexen2LastAttacked",1);
	Delay(time);
	TakeInventory("Hexen2LastAttacked",1);
}

Script "Hexen2_Decorate_Monster" (int mode, int arg1, int arg2)
{
	int OldTID, target, newtid, x, y, z, speedx, speedy, lasttimer, velocity, movement, length;
	switch(mode)
	{
		case 1: //Hexen2_MezzomanThrust
			oldTID = ActivatorTID();
			target = UniqueTID();
			Thing_ChangeTID(0, target);
			SetActivatorToTarget(0);
			int angle = GetActorAngle(0);
			SetActivator(target);
			Thing_ChangeTID(target, oldTID);
			SetActivator(0, AAPTR_Tracer);
			ThrustThingZ(0,25,0,1);
			ThrustThing(angle,5,1,0);
			break;
		case 2: //mezzoman sword damage
			SetActivatorToTarget(0);
			SetResultValue(CheckInventory("Hexen2MezzomanBerserk")+1);
			break;
		case 3: //check velocity
			speedx = GetActorVelX(0);
			speedy = GetActorVelY(0);
			velocity = magnitudeTwo_f(speedx, speedy);
			if(velocity > arg1 || velocity < -arg1)
				SetResultValue(1);
			else
				SetResultValue(0);
			break;
		case 4:
			case 4:
			SetActivatorToTarget(0);
			if(ClassifyActor(0) & ACTOR_ALIVE)
				SetResultValue(0);
			else
				SetResultValue(1);
			break;
		case 5:
			int targetalliance = CheckFlag(0,"FRIENDLY");
			oldtid = ActivatorTID();
			newtid = UniqueTid();
			Thing_ChangeTID(0, newtid);
			SetActivatorToTarget(0);
			int currentx = GetActorX(0);
			int currenty = GetActorY(0);
			int currentz = GetActorZ(0);
			SetActivator(newtid);
			Thing_ChangeTid(newtid, oldtid);
			SetActivator(0, AAPTR_TRACER);
			int traceralliance = CheckFlag(0,"FRIENDLY");
			if(ClassifyActor(0) != ACTOR_WORLD && GetActorClass(0) != "Hexen2Famine")
			{
				Thing_Stop(0);
				int targetx = GetActorX(0);
				int targety = GetActorY(0);
				int targetz = GetActorZ(0);	
				int vectorx = targetx - currentx;
				int vectory = targety - currenty;
				int vectorz = targetz - currentz;
				int vang = VectorAngle(vectorx, vectory);
				ThrustThing((vang >> 8) + 128, arg1, 0, 0);
					
				length = magnitudeTwo(vectorx>>16,vectory>>16);
				int vpitch = VectorAngle(length<<16, vectorz);
				int zthrust = sign(sin(vpitch))*arg2;
				
				//if(zthrust > 0) huh
					ThrustThingZ(0, zthrust, arg2, 1);
				//else
					//ThrustThingZ(0, zthrust, 1, 1);
			}
			break;
		case 6: // Set Fallen Angel Renderstyle
			if(arg1 < 2)
				SetActorProperty(0,APROP_RENDERSTYLE,64+(3*arg1));
			else
				{
					int a;
					While(ClassifyActor(0) & ACTOR_ALIVE)
					{
						if(a < 25)
						{
							until(a >= 25)
							{
								if(CheckInventory("Hexen2FallenAngelLordAlphaToken") || GetActorProperty(0,APROP_Health) <= 50) { SetActorProperty(0,APROP_ALPHA,1.0); terminate; }
								SetActorProperty(0,APROP_ALPHA,0.25+(a*0.01));
								a++;
								Delay(1);
							}
						}
						else
						{
							until(a <= 0)
							{
								if(CheckInventory("Hexen2FallenAngelLordAlphaToken") || GetActorProperty(0,APROP_Health) <= 50) { SetActorProperty(0,APROP_ALPHA,1.0); terminate; }
								SetActorProperty(0,APROP_ALPHA,0.25+(a*0.01));
								a--;
								Delay(1);
							}
						}
					}
				}
				break;
		case 7:
			SetActivator(0,AAPTR_MASTER);
			SetResultValue(GetUserVariable(0,"user_golembeamrot"));
			break;
		case 8: // fallenangel's fly loop
			int destx, desty, destz, cooldown;
			int floatduration = 10;
			Delay(15);
			while(ClassifyActor(0) & ACTOR_ALIVE)
			{
				if(!CheckInventory("Hexen2FallenAngelAttackToken"))
				{
					speedx = GetActorVelX(0);
					speedy = GetActorVelY(0);
					velocity = magnitudeTwo_f(speedx, speedy);
					x = GetActorX(0);
					y = GetActorY(0);
					z = GetActorZ(0);
					if(!CheckInventory("Hexen2FallenAngelFindPlayerToken"))
					{
						if(velocity == 0 || CheckInventory("Hexen2FallenAngelFindSpotToken"))
						{
							if(newtid != 0)
								Thing_Remove(newtid);
								
							TakeInventory("Hexen2FallenAngelFindSpotToken",1);
							int vec = random(0,65536);
							int dist = random(100,200);
							newtid = UniqueTid();
							SpawnForced("Hexen2FallenAngelSpot", x+(dist*cos(vec)), y+(dist*sin(vec)), z, newtid, 0);
							destx = GetActorX(newtid);
							desty = GetActorY(newtid);
							destz = GetActorZ(newtid);
							SetPointer(AAPTR_TARGET,newtid);
							length = magnitudeTwo((destx-x)>>16,(desty-y)>>16);
						}
						length = magnitudeTwo((destx-x)>>16,(desty-y)>>16);
						if(length < 20)
						{
							SetActorState(0,"LookForPlayer",true);
						}
					}
					else
					{
						if(cooldown >= 17)
						{
							TakeInventory("Hexen2FallenAngelFindPlayerToken",1);
							cooldown = 0;
						}
						else
							cooldown++;
					}	
					if(floatduration >= 10)
					{
						SetActorVelocity(0,GetActorVelX(0),GetActorVelY(0),random(-2.0,2.0),0,0);
						floatduration = 0;
					}
					floatduration++;
				}
				Delay(2);
			}
			break;
		case 9: //fangel remove target
			SetActivatorToTarget(0);
			if(!(ClassifyActor(0) & ACTOR_ALIVE))
				Thing_Remove(0);
			break;
		case 10: //fangel skip if not a valid target
			SetActivatorToTarget(0);
			if(ClassifyActor(0) & ACTOR_ALIVE)
				SetResultValue(1);
			else
				SetResultValue(0);
			break;
		case 11: //fallen angel death particles
			int particlecount;
			while(ClassifyActor(0) != ACTOR_WORLD)
			{
				particlecount = 80;
				until(particlecount == 0)
				{
					SpawnForced("Hexen2FallenAngelDeathPuffGenerator",GetActorX(0),GetActorY(0),GetActorZ(0),0,0);
					particlecount--;
				}
				Delay(2);
			}
			break;
		case 12: //Eidolon projectile pitch for A_SpawnItemEx
			x = GetActorX(0);
			y = GetActorY(0);
			z = GetActorZ(0)+188.0;
			SetActivatorToTarget(0);
			int targX = GetActorX(0);
			int targY = GetActorY(0);
			int targZ = GetActorZ(0)-32.0;
			int eidodistance = magnitudeThree_f(x - targX, y - targY, z - targZ);
			int eidopitch = VectorAngle(eidodistance, z - targZ);
			SetResultValue(eidopitch/182);
			break;
	}
}

Script "Hexen2_CorpseRemove" (void)
{
	int decaytimer = 10;
	int scalex, scaley, alpha;
	delay(700);
	SpawnForced("Hexen2RedFlash",GetActorX(0),GetActorY(0),GetActorZ(0)+10.0,0,0);
	SetActorProperty(0,APROP_RENDERSTYLE,STYLE_TRANSLUCENT);
	SetActorProperty(0,APROP_Invulnerable,true); // would look weird to destroy a transparent, shrinking corpse
	while(decaytimer > 0)
	{
		scalex = GetActorProperty(0,APROP_SCALEX);
		scaley = GetActorProperty(0,APROP_SCALEY);
		alpha = GetActorProperty(0,APROP_ALPHA);
			
		if(scalex >= 0.1)
			SetActorProperty(0,APROP_SCALEX,scalex-0.1);
		
		if(scaley >= 0.1)
			SetActorProperty(0,APROP_SCALEY,scaley-0.1);
		
		if(alpha >= 0.1)
			SetActorProperty(0,APROP_ALPHA,alpha-0.1);
			
		decaytimer--;
		Delay(3);
	}
	Thing_Remove(0);
}