str GuardTypes[21] = { "ArmorGuard", "BlueCamGuard", "CamGuard", "CommGuard", "GrayGuard", "GreatGuard", "GreatGuard2", "MoonFemale", "MoonGuard", "NavyGuard", "OliveGuard", "Ourumov", "RusGuard", "TrevGuard", "SnowGuard", "Oddjob", "Jaws", "Mayday", "Xenia", "Trevelyan", "BaronSamedi" };
str HeadTypes[29] = { "Alan", "B", "Chris", "Dave", "Des", "Duncan", "Dwayne", "Graeme", "Grant", "Jim", "Joel", "Joe2", "Joe", "Karl", "Ken", "Lee", "Mark", "Martin", "Neil", "Pete", "Robin", "Scott", "Shaun", "Stevee", "Steveh", "Mandy", "Marion", "Sally", "Vivien" };
str HatTypes[14] = { "", "BeretBlack", "BeretBlue", "BeretRed", "FurHatBlack", "FurHatBlue", "FurHatBrown", "HelmetGray", "HelmetGreen", "MoonHeadGear", "PeakedCap", "SideHatDarkGreen", "SideHatLightGreen", "OddJob" };
str GunTypes[28] = { "PP7", "DD44", "DualDD44", "Klobb", "DualKlobb", "KF7", "ZMG", "DualZMG", "D5k", "DualD5k", "Phantom", "DualPhantom", "AR33", "DualAR33", "RCP90", "DualRCP90", "AutoShotgun", "Sniper", "Cougar", "DualCougar", "Laser", "DualLaser", "GrenadeL", "RocketL", "SCombo", "XCombo", "OddjobHat", "SilverPP7"};

/*function int SetPointerExt(int assign_slot, int tid, int assign_to_tid) 
{
	int a = ActivatorTID(); // Get original activator tid if there is an activator (I have ASSUMED that it returns 0 if there is no activator)
	Thing_ChangeTID(0, UniqueTID()); // Create temporary, unique activator tid
	int temp = ActivatorTID(); // Get temporary activator tid (0 if there is no activator)

	if(SetActivator(assign_to_tid)) 
		SetPointer(assign_slot, temp); // If an activator (assign_to_tid) is set, assign a pointer value to it.
	if(SetActivator(temp)) 
		Thing_ChangeTID(0, a); // If an activator (temp) is set, restore its original tid (a).
		
	return 0;
}*/

Script "Goldeneye_HatShot" (void)
{
	str thrownhat = HatTypes[CheckInventory("Goldeneye_HatShotToken")];
	if(StrLen(thrownhat) == 0)
	{
		SetResultValue(3);
		terminate;
	}

	if(CheckInventory("Goldeneye_HatShotToken") == 8 || CheckInventory("Goldeneye_HatShotToken") == 9)
	{
		PlaySound(0,"Goldeneye/SlapperMetal",CHAN_7,1.0,0,ATTN_NORM);
		SetResultValue(0);
		//Do not always discard hat if hit!
		if(random(0,1) == 1)
		{
			terminate;
		}
	}
	else 
		SetResultValue(3); 
		
	if(CheckInventory("SamsaraZScriptReady") == 1) GiveInventory("Goldeneye_Hat_Clear",1);
	SpawnForced(StrParam(s:"Goldeneye_",s:thrownhat,s:"_Drop"),GetActorX(0),GetActorY(0),GetActorZ(0) + 48.0,0,0);
	TakeInventory("Goldeneye_HatShotToken",12);
	//SetActivator(0,AAPTR_Tracer);
	//Thing_Remove(0);
}

Script "GoldeneyePartPositioner" (int type)
{
	switch(type)
	{
		case 0: Warp(AAPTR_MASTER,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_USEPTR|WARPF_COPYINTERPOLATION); break;
		case 1:
			int myTid = UniqueTid();
			Thing_ChangeTid(0,myTid);
			SetActivator(0,AAPTR_Master);
			SetActorProperty(myTid,APROP_ScaleX,GetActorProperty(0,APROP_ScaleX));
			SetActorProperty(myTid,APROP_ScaleY,GetActorProperty(0,APROP_ScaleY));
			break;
	}
}

Script "GoldeneyeEnemyPartsPicker" (int type, int ec)
{
	str glasses;
	int elitechance, hattype, guntype, randnum;
	int newtid = UniqueTID();
	int bodytid = UniqueTID();
	int headtid = UniqueTID();
	int hattid = UniqueTID();
	int guntid = UniqueTID();
	int misctid = UniqueTID();
	int activator = ActivatorTID();
	int randomHead;
	Thing_ChangeTID(0, newtid);
	//Assign ZScriptReady Token for enemies
	GiveInventory("SamsaraZScriptReady",GetCvar("Samsara_ZScriptReady"));
	GiveInventory("Goldeneye_Body_HideBase",1);
	//Spawn the parts
	
	if(type != 6 && type != 13 && type != 14 && type != 15 && type != 16 && type != 17 && type != 18 && type != 20 && type != 22 && type != 23)
	{
		if(type == 19)
			randomHead = random(25,28);	
		else 
		{
			elitechance = ec; 
			int eliterand = random(0,100);
			if(elitechance > eliterand)
				GiveInventory("Goldeneye_GlassesPart",1);		
			randomHead = random(0,24);
		}
		GiveInventory("Goldeneye_HeadPart",randomHead+1);	
	}
	switch(type)
	{
		case 1:	
			//Select Body
			GiveInventory("Goldeneye_BodyPart",7);
			
			//Select Hat
			randnum = random(0,100);
			if(randnum >= 50) 
				GiveInventory("Goldeneye_HatPart",6);

			//Select Gun
			guntype = 5; //KF7
			GiveInventory("Goldeneye_EnemyTwoHanded",1);
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;
		case 2:	//DD44, Dual DD44, KF7
			//Select Body
			GiveInventory("Goldeneye_BodyPart",6);	
		
			//Select Hat
			randnum = random(0,100);
			if(randnum >= 66) 
				GiveInventory("Goldeneye_HatPart",4);
			else if(randnum >= 33) 
				GiveInventory("Goldeneye_HatPart",1);
		
			//Select Gun
			randnum = random(0,100);
			if(randnum >= 80)
				guntype = 1; //DD44
			else if(randnum >= 40)
				{ guntype = 1; GiveInventory("Goldeneye_DualWield",1); } //Dual DD44
			else 
				{ guntype = 5; GiveInventory("Goldeneye_EnemyTwoHanded",1); } //KF7	
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;
		case 3:
			//Select Body
			GiveInventory("Goldeneye_BodyPart",11);	
			GiveInventory("Goldeneye_GrenadeThrower", 1);
			
			//Select Hat	
			randnum = random(0,100);
			if(randnum >= 75) 
				GiveInventory("Goldeneye_HatPart",11);
			else if(randnum >= 50) 
				{ GiveInventory("Goldeneye_HatPart",8); SetActorProperty(0,APROP_Health,60); }				
			else 
				GiveInventory("Goldeneye_HatPart",3);
			
			//Select Gun
			randnum = random(0,100);
			if(hattype == 3)
			{
				if(randnum >= 50)
					guntype = 3; //Klobb
				else	
					{ guntype = 3; GiveInventory("Goldeneye_DualWield",1); } //Dual Klobb
			}		
			else
			{
				if(randnum <= 9)
					{ guntype = 3; GiveInventory("Goldeneye_DualWield",1); } //Dual Klobb
				else if(randnum <= 14)
					guntype = 22; //GrenadeLauncher								
				else if(randnum <= 19)
					guntype = 23; //RocketLauncher				
				else if(randnum <= 33)
					guntype = 3; //Klobb
				else	
					{ guntype = 5; GiveInventory("Goldeneye_EnemyTwoHanded",1); } //KF7	
			}		
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;
		case 4:	
			//Select body
			GiveInventory("Goldeneye_BodyPart",13);	
			GiveInventory("Goldeneye_GrenadeThrower", 1);
			
			//Select Hat
			randnum = random(0,100);
			if(randnum >= 50) 
				{ GiveInventory("Goldeneye_HatPart",7); SetActorProperty(0,APROP_Health,80); }	

			//Select Gun
			randnum = random(0,100);
			if(randnum >=40)
				{ guntype = 5; GiveInventory("Goldeneye_EnemyTwoHanded",1); } //KF7
			else if (randnum >= 20)
				guntype = 6; //ZMG
			else 
				{ guntype = 6; GiveInventory("Goldeneye_DualWield",1); } //Dual ZMG		
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;		
		case 5:	
			
			//Set init health
			SetActorProperty(0,APROP_Health,100);
			
			//Select Body
			GiveInventory("Goldeneye_BodyPart",2);	

			//Select Hat
			randnum = random(0,100);
			if(CheckInventory("Goldeneye_GlassesPart"))
			{
				SetActorProperty(0,APROP_Health,160);
				GiveInventory("Goldeneye_GuardTierToken", 1);
				if(randnum >= 50)
					GiveInventory("Goldeneye_HatPart",1);
			}
			else
			{
				if(randnum >= 50)
					GiveInventory("Goldeneye_HatPart",4);
			}		

			//Select Gun
			randnum = random(0,100);
			if(CheckInventory("Goldeneye_GlassesPart"))
			{
				if(randnum >= 50)
					{ guntype = 3; GiveInventory("Goldeneye_DualWield",1); } //Dual Klobb	
				else
					{ guntype = 1; GiveInventory("Goldeneye_DualWield",1); } //Dual DD44	
			}
			else
			{
				if(randnum >= 50)
					guntype = 3; //Klobb
				else
					{ guntype = 5; GiveInventory("Goldeneye_EnemyTwoHanded",1); } //KF7	
			}	
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;	
		case 6:	
			//Set init health
			SetActorProperty(0,APROP_Health,180);
			GiveInventory("Goldeneye_GuardTierToken", 1);
			
			//Select Body
			GiveInventory("Goldeneye_BodyPart",15);	
			
			//Select Gun
			randnum = random(0,100);
			if(randnum >= 75) 
				{ guntype = 5; GiveInventory("Goldeneye_EnemyTwoHanded",1); } //KF7	
			else if(randnum >= 50) 
				guntype = 3; //Klobb
			else if(randnum >= 25)
				{ guntype = 17; GiveInventory("Goldeneye_EnemyTwoHanded",1); } //Sniper	
			else
				{ guntype = 24; GiveInventory("Goldeneye_DualWield",1); } //SCombo
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;
		case 7:	
			//Set init health
			SetActorProperty(0,APROP_Health,50);
		
			//Select Body
			GiveInventory("Goldeneye_BodyPart",4);	
			
			//Select Hat
			GiveInventory("Goldeneye_HatPart",10);
			
			//Select Gun
			randnum = random(0,100);
			if(randnum >= 66) { guntype = 0; GiveInventory("Goldeneye_GrenadeThrower", 1); } //PP7
			else if(randnum >= 33) 
				guntype = 1; //DD44
			else 
				guntype = 3; //Klobb
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;
		case 8:	
			//Set init health
			SetActorProperty(0,APROP_Health,180);
			
			//Select Body
			GiveInventory("Goldeneye_BodyPart",3);	
			
			//Select Hat
			randnum = random(0,100);
			if(randnum >= 50)  
				{ GiveInventory("Goldeneye_HatPart",7); SetActorProperty(newtid,APROP_Health,200); GiveInventory("Goldeneye_HatShotToken",8);}
				
			//Select Gun
			randnum = random(0,100);
			if(randnum >= 66) 
				{ guntype = 12; GiveInventory("Goldeneye_EnemyTwoHanded",1); } //AR33	
			else if(randnum >= 33)
				guntype = 8; //D5K
			else
				guntype = 18; //Cougar
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;
		case 9:	
			//Set init health
			SetActorProperty(newtid,APROP_Health,360);
			GiveActorInventory(newtid,"Goldeneye_GuardTierToken", 1);
			
			//Select Body
			GiveInventory("Goldeneye_BodyPart",1);
			
			//Select Hat
			randnum = random(0,100);
			if(randnum >= 50) 
				GiveInventory("Goldeneye_HatPart",1);
							
			//Select Gun
			randnum = random(0,100);
			if(randnum >= 90)		
				{ guntype = 10; GiveInventory("Goldeneye_DualWield",1); } //Dual Phantom
			else if (randnum >= 67)
				guntype = 10; //Phantom
			else if (randnum >= 50)
				{ guntype = 8; GiveInventory("Goldeneye_DualWield",1); } //Dual D5K
			else
				guntype = 8; //D5K
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;
		case 10:	
			//Set init health
			SetActorProperty(newtid,APROP_Health,160);
			GiveInventory("Goldeneye_GuardTierToken", 2);
			GiveInventory("Goldeneye_GrenadeThrower", 1);
			
			//Select Body
			GiveInventory("Goldeneye_BodyPart",14);	
			
			//Select Hat
			randnum = random(0,100);
			if(randnum >= 66) 
				{ GiveInventory("Goldeneye_HatPart",1); SetActorProperty(0,APROP_Health,210); }
			else if (randnum >= 33)	
				{ GiveInventory("Goldeneye_HatPart",2); SetActorProperty(0,APROP_Health,260); }
			else
				{ GiveInventory("Goldeneye_HatPart",3); SetActorProperty(0,APROP_Health,300); }
			if(CheckInventory("Goldeneye_GlassesPart"))
				{ SetActorProperty(0,APROP_Health,300+(10*CheckInventory("Goldeneye_HatPart"))); }
			
			//Select Gun
			randnum = random(0,100);
				if (randnum >= 96)
					{ guntype = 14; GiveInventory("Goldeneye_DualWield",1); } //Dual RCP90
				else if (randnum >= 80) 
					{ guntype = 6; GiveInventory("Goldeneye_DualWield",1); } //Dual ZMG		
				else if	(randnum >= 72)
					guntype = 6; //ZMG
				else if (randnum >= 64)
					{ guntype = 12; GiveInventory("Goldeneye_EnemyTwoHanded",1); } //AR33	
				else if (randnum >= 56)
					guntype = 8; //D5K
				else if (randnum >= 48)
					{ guntype = 3; GiveInventory("Goldeneye_DualWield",1); } //Dual Klobb
				else if (randnum >= 32)
					{ guntype = 1; GiveInventory("Goldeneye_DualWield",1); } //Dual DD44
				else if (randnum >= 24)
					guntype = 1; //PP7
				else if (randnum >= 16)
					{ guntype = 14; GiveInventory("Goldeneye_EnemyTwoHanded",1); } //RCP90	
				else if (randnum >= 8)
					{ guntype = 16; GiveInventory("Goldeneye_EnemyTwoHanded",1); } //AutoShotgun	
				else 
					{ guntype = 5; GiveInventory("Goldeneye_EnemyTwoHanded",1); } //KF7			
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;	
		case 11:
		case 19:
			//Set init health
			SetActorProperty(0,APROP_Health,210);
			GiveInventory("Goldeneye_GuardTierToken", 2);
			GiveInventory("Goldeneye_GrenadeThrower", 1);
			
			//Select Body
			GiveInventory("Goldeneye_BodyPart",9);	
			
			//Select Hat
			randnum = random(0,100);
			if(randnum >= 50) 
				{ GiveInventory("Goldeneye_HatPart",9); SetActorProperty(0,APROP_Health,360); }
				
			//Select Gun
			randnum = random(0,100);
			if(randnum >= 40)
				{ guntype = 12; GiveInventory("Goldeneye_EnemyTwoHanded",1); } //AR33	
			else if(randnum >= 20)
				guntype = 20; //Laser
			else
				{ guntype = 20; GiveInventory("Goldeneye_DualWield",1); } //Dual Laser
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;	
		case 12:	
			//Select Body
			GiveInventory("Goldeneye_BodyPart",5);

			//Select Hat
			randnum = random(0,100);
			if(randnum >= 66) 
				GiveInventory("Goldeneye_HatPart",10);
				
			//Select Gun
			randnum = random(0,100);
			if(randnum >= 80)
				{ guntype = 1; GiveInventory("Goldeneye_DualWield",1); } //Dual DD44
			else if (randnum >= 70)
				guntype = 3; //Klobb
			else if(randnum >= 60)
				guntype = 1; //PP7
			else if(randnum >= 40)
				guntype = 23; //Rocket Launcher
			else if(randnum >= 30)
				guntype = 22; //GrenadeL
			else
				{ guntype = 5; GiveInventory("Goldeneye_EnemyTwoHanded",1); } //KF7			
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;		
		case 13:	
			//Set init health
			SetActorProperty(0,APROP_Health,750);
		
			//Select body
			GiveInventory("Goldeneye_BodyPart",16);	
			
			//Select Hat
			GiveInventory("Goldeneye_HatPart",13);
			break;		
		case 14:
			//Set init health
			SetActorProperty(0,APROP_Health,600);
		
			//Select body
			GiveInventory("Goldeneye_BodyPart",17);	

			//Select Gun
			guntype = 12; 
			GiveInventory("Goldeneye_DualWield",1);
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;			
		case 15:	
			//Set init health
			SetActorProperty(0,APROP_Health,700);
			GiveInventory("Goldeneye_GuardTierToken", 3);
			
			//Select Body
			GiveInventory("Goldeneye_BodyPart",12);	
			
			//Select Gun
			guntype = 27; //Silver PP7
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;	
		case 16:
			//Set init health
			SetActorProperty(0,APROP_Health,400);
			GiveInventory("Goldeneye_GuardTierToken",3);
			
			//Select body
			GiveInventory("Goldeneye_BodyPart",21);	

			//Select Gun
			{ guntype = 1; GiveInventory("Goldeneye_DualWield",1); } //Dual DD44
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;
		case 17:	
			//Set init health
			SetActorProperty(0,APROP_Health,500);
			GiveInventory("Goldeneye_GuardTierToken",3);
			
			//Select body
			GiveInventory("Goldeneye_BodyPart",21);	

			//Select Gun
			{ guntype = 6; GiveInventory("Goldeneye_DualWield",1); } //Dual ZMG		
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;
		case 18:	
			//Set init health
			SetActorProperty(0,APROP_Health,400);
			GiveInventory("Goldeneye_GuardTierToken",3);
			
			//Select body
			GiveInventory("Goldeneye_BodyPart",21);	

			//Select Gun
			{ guntype = 20; GiveInventory("Goldeneye_DualWield",1); } //Dual Laser
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;	
		case 20:
			//Set init health
			SetActorProperty(0,APROP_Health,2500);
			GiveInventory("Goldeneye_GuardTierToken",3);
			GiveInventory("Goldeneye_GrenadeThrower",1);
			
			//Select body
			GiveInventory("Goldeneye_BodyPart",20);	

			//Select Gun
			randnum = random(0,100);
			if(randnum >= 67)
				{ guntype = 12; GiveInventory("Goldeneye_EnemyTwoHanded",1); } //AR33
			else if(randnum >= 33)
				{ guntype = 16; GiveInventory("Goldeneye_EnemyTwoHanded",1); } //AutoShotgun	
			else
				guntype = 6; //ZMG
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;		
		case 21:
			//Set init health
			SetActorProperty(newtid,APROP_Health,100);
			GiveActorInventory(newtid,"Goldeneye_GuardTierToken", 1);
			
			//Select Body
			GiveInventory("Goldeneye_BodyPart",1);
			GiveInventory("Goldeneye_HasJetPack",1);
			
			//Select Hat
			randnum = random(0,100);
			if(randnum >= 50) 
				GiveInventory("Goldeneye_HatPart",1);
							
			//Select Gun
			randnum = random(0,100);
			if(randnum >= 90)		
				{ guntype = 10; GiveInventory("Goldeneye_DualWield",1); } //Dual Phantom
			else if (randnum >= 67)
				guntype = 10; //Phantom
			else if (randnum >= 50)
				{ guntype = 8; GiveInventory("Goldeneye_DualWield",1); } //Dual D5K
			else
				guntype = 8; //D5K
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;
		case 22:
			//Set init health
			SetActorProperty(0,APROP_Health,700);
			GiveActorInventory(0,"Goldeneye_GuardTierToken", 2);

			//Select Body
			GiveInventory("Goldeneye_BodyPart",18);
	
			//Select Gun
			{ guntype = 18; GiveInventory("Goldeneye_DualWield",1); } //Dual Cougar
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;	
		case 23:
			//Set init health
			SetActorProperty(0,APROP_Health,1200);
			GiveActorInventory(0,"Goldeneye_GuardTierToken", 2);

			//Select Body
			GiveInventory("Goldeneye_BodyPart",19);
	
			//Select Gun
			{ guntype = 25; GiveInventory("Goldeneye_DualWield",1); } //XCombo
			SetActorProperty(0,APROP_Mass,200+(1+guntype));
			GiveInventory("Goldeneye_GunPart",1+guntype);
			break;	
	}
	if(type != 13) GiveInventory("Goldeneye_HatShotToken",CheckInventory("Goldeneye_HatPart"));
}

Script "GoldeneyeEnemyDrops" (void)
{
	if(CheckInventory("Goldeneye_BodyPart") == 21) terminate;
	int x,y,z,guntype,randnum;
	str mag;
	x = GetActorVelX(0);
	y = GetActorVelY(0);
	z = GetActorVelZ(0);
	guntype = GetActorProperty(0,APROP_MASS)-201;
	str dual = GunTypes[guntype];
	if(guntype <= 16 || guntype == 27)
	{
		randnum = random(0,100);
		if (randnum <= 15)
			mag = "mag";
		else
			mag = "";
	}
	else
	{
		mag = "";
	}	
		
	if(StrLeft(dual,4) == "Dual")
	{
		SpawnForced(StrParam(s:"Goldeneye_",s:StrRight(dual, StrLen(dual)-4),s:mag,s:"EnemyDrop"),GetActorX(0),GetActorY(0),GetActorZ(0) + (X+45.0),(y+0),(z+random(40.0,48.0)));
		SpawnForced(StrParam(s:"Goldeneye_",s:StrRight(dual, StrLen(dual)-4),s:mag,s:"EnemyDrop"),GetActorX(0),GetActorY(0),GetActorZ(0) + (X+-45.0),(y+0),(z+random(40.0,48.0)));
	}	
	else if(StrLeft(dual,6) == "Silver")
	{
		SpawnForced(StrParam(s:"Goldeneye_",s:StrRight(dual, StrLen(dual)-6),s:mag,s:"EnemyDrop"),GetActorX(0),GetActorY(0),GetActorZ(0) + (X+45.0),(y+0),(z+random(40.0,48.0)));	
	}	
	else if(StrRight(dual,5) == "Combo")
	{
		if(StrLeft(dual,1) == "X")
		{
			SpawnForced(StrParam(s:"Goldeneye_",s:GunTypes[14],s:mag,s:"EnemyDrop"),GetActorX(0),GetActorY(0),GetActorZ(0) + (X+45.0),(y+0),(z+random(40.0,48.0)));
			SpawnForced(StrParam(s:"Goldeneye_",s:GunTypes[22],s:mag,s:"EnemyDrop"),GetActorX(0),GetActorY(0),GetActorZ(0) + (X+-45.0),(y+0),(z+random(40.0,48.0)));		
		}
		else
		{
			SpawnForced(StrParam(s:"Goldeneye_",s:GunTypes[3],s:mag,s:"EnemyDrop"),GetActorX(0),GetActorY(0),GetActorZ(0) + (X+45.0),(y+0),(z+random(40.0,48.0)));
			SpawnForced(StrParam(s:"Goldeneye_",s:GunTypes[17],s:mag,s:"EnemyDrop"),GetActorX(0),GetActorY(0),GetActorZ(0) + (X+-45.0),(y+0),(z+random(40.0,48.0)));	
		}	
	}
		
	else
	{
		SpawnForced(StrParam(s:"Goldeneye_",s:dual,s:mag,s:"EnemyDrop"),GetActorX(0),GetActorY(0),GetActorZ(0) + (X+45.0),(y+0),(z+random(40.0,48.0)));
	}
}	
	
Script "GoldeneyeUpdateAppearance" (void)
{
	GiveInventory(strparam(s:"Goldeneye_Body_",s:GuardTypes[CheckInventory("Goldeneye_BodyPart")-1]),1);
	if(CheckInventory("Goldeneye_HeadPart")) GiveInventory(strparam(s:"Goldeneye_Head_",s:HeadTypes[CheckInventory("Goldeneye_HeadPart")-1]),1);
	if(CheckInventory("Goldeneye_HatPart") > 0) GiveInventory(strparam(s:"Goldeneye_Hat_",s:HatTypes[CheckInventory("Goldeneye_HatPart")]),1);
	if(CheckInventory("Goldeneye_GunPart")) 
	{
		if(CheckInventory("Goldeneye_BodyPart") == 21)
			GiveInventory(strparam(s:"Goldeneye_Gun_",s:GunTypes[1]),1);
		else
			GiveInventory(strparam(s:"Goldeneye_Gun_",s:GunTypes[CheckInventory("Goldeneye_GunPart")-1]),1);
			
		if(CheckInventory("Goldeneye_DualWield")) 
		{
			if(CheckInventory("Goldeneye_BodyPart") == 21)
				GiveInventory(strparam(s:"Goldeneye_Gun_Dual",s:GunTypes[1]),1);
			else
				GiveInventory(strparam(s:"Goldeneye_Gun_Dual",s:GunTypes[CheckInventory("Goldeneye_GunPart")-1]),1);
		}
	}
	if(CheckInventory("Goldeneye_HasJetPack")) GiveInventory("Goldeneye_Misc_JetPack",1);
}

Script "GoldeneyeDrawEnemyFlash" (int dual)
{
	//If the gun is a certain type, don't flash
	if(CheckInventory("Goldeneye_GunPart") == 18) terminate;
	if(CheckInventory("Goldeneye_GunPart") == 24) terminate;
	if(CheckInventory("Goldeneye_GunPart") == 25 && !dual) terminate;
	if(CheckInventory("SamsaraZScriptReady") == 1)
	{
		GiveInventory(strparam(s:"Goldeneye_Flash_",s:dual ? "Dual" : "",s:GunTypes[CheckInventory("Goldeneye_GunPart")-1]),1);
		Delay(2);
		GiveInventory("Goldeneye_Flash_DualClearBoth",1);
	}
}

Script "Goldeneye_DrawGrenade" (int hide)
{
	if(!hide)
	{
		if(CheckInventory("SamsaraZScriptReady") == 1)
			GiveInventory("Goldeneye_Gun_Grenade",1);
	}
	else
	{
		if(CheckInventory("SamsaraZScriptReady") == 1)
		{
			GiveInventory("Goldeneye_Gun_Clear",1);
			Delay(30);
			ACS_NamedExecuteWithResult("Goldeneye_RestoreGuns");
		}
	}
}

//Restore Guns in case something like grenade sequence is interrupted
Script "Goldeneye_RestoreGuns" (void)
{
	if(CheckInventory("Goldeneye_BodyPart") != 16)
	{
		if(CheckInventory("Goldeneye_BodyPart") == 21)
		{
			GiveInventory(strparam(s:"Goldeneye_Gun_",s:GunTypes[1]),1);
			if(CheckInventory("Goldeneye_DualWield")) GiveInventory(strparam(s:"Goldeneye_Gun_Dual",s:GunTypes[1]),1); 
		}
		else
		{
			GiveInventory(strparam(s:"Goldeneye_Gun_",s:GunTypes[CheckInventory("Goldeneye_GunPart")-1]),1);
			if(CheckInventory("Goldeneye_DualWield")) GiveInventory(strparam(s:"Goldeneye_Gun_Dual",s:GunTypes[CheckInventory("Goldeneye_GunPart")-1]),1);
		}
	}
	else
	{
		GiveInventory("Goldeneye_OddJob_RestoreHat",1);
		GiveInventory("Goldeneye_Gun_Clear",1);
	}
}

//Used for removing gun on death
Script "Goldeneye_RemoveGuns" (void)
{
	if(CheckInventory("SamsaraZScriptReady") == 1)
		GiveInventory("Goldeneye_Gun_DualClear",1);
}

Script "Goldeneye_SynchronousFire" (int delayTimerR, int fireOnceR)
{
	int alreadyFiredR = 0;
	while(!CheckInventory("GoldeneyeEnemyKillAttack") && (ClassifyActor(0) & ACTOR_ALIVE))
	{
		if(!fireOnceR || !alreadyFiredR) GiveInventory("GoldeneyeEnemyWeaponChooserDual",1);
		Delay(delayTimerR);
		alreadyFiredR = 1;
	}
}

Script "Goldeneye_EnemyAttacker" (int dual, int initTimer)
{
	int delayTimerL = 1;
	int delayTimerR = delayTimerL;
	int fireOnceL = 0;
	int fireOnceR = 0;
	int alreadyFiredL = 0;
	int alreadyFiredR = 0;
	int synchronous = 0;
	int initSyncAttack = 1;
	Delay(initTimer);
	while(!CheckInventory("GoldeneyeEnemyKillAttack") && (ClassifyActor(0) & ACTOR_ALIVE))
	{
		switch(CheckInventory("Goldeneye_GunPart"))
		{
			case 1:
			case 2:
			case 3:
			case 17:
			case 18:
			case 19:
			case 20:
			case 28:
				delayTimerL = 24;
				delayTimerR = delayTimerL;
				break;
			case 21:
			case 22:
				delayTimerL = 12;
				delayTimerR = delayTimerL;
			break;
			case 4:
			case 5:
				delayTimerL = 7;
				delayTimerR = delayTimerL;
				break;
			case 6:
			case 7:
			case 8:
			case 9:
			case 10:
			case 11:
			case 12:
				delayTimerL = 4;
				delayTimerR = delayTimerL;
				break;
			case 13:
			case 14:
				delayTimerL = 3;
				delayTimerR = delayTimerL;
				break;
			case 15:
			case 16:
				delayTimerL = 2;
				delayTimerR = delayTimerL;
				break;
			case 23:
			case 24:
				fireOnceL = 1;
				delayTimerR = delayTimerL;
				break;
			case 25:
				delayTimerL = 24;
				delayTimerR = 7;
				synchronous = 1;
				break;
			case 26:
				synchronous = 1;
				delayTimerL = 2;
				delayTimerR = 36;
				//fireOnceR = 1; This is Xenia, so this should be a little more dangerous
				break;
		}
		if(!synchronous)
		{
			if(!fireOnceL || !alreadyFiredL) GiveInventory("GoldeneyeEnemyWeaponChooser",1);
			if(dual)
			{
				//TO-DO - we need to make another method or function that will run this part when the weapon is synchronous. Something like Xenia's combo
				Delay(delayTimerL);
				if(CheckInventory("GoldeneyeEnemyKillAttack") || !(ClassifyActor(0) & ACTOR_ALIVE)) break;
				if(!fireOnceR || !alreadyFiredR) GiveInventory("GoldeneyeEnemyWeaponChooserDual",1);
			}
			Delay(delayTimerR);
			alreadyFiredL = 1;
			alreadyFiredR = 1;
		}
		else if(!dual)
		{
			if(!fireOnceL || !alreadyFiredL) GiveInventory("GoldeneyeEnemyWeaponChooser",1);
			Delay(delayTimerL);
			alreadyFiredL = 1;
		}
		else
		{
			if(initSyncAttack) ACS_NamedExecuteWithResult("Goldeneye_SynchronousFire", delayTimerR, fireOnceR);
			initSyncAttack = 0;
			if(!fireOnceL || !alreadyFiredL) GiveInventory("GoldeneyeEnemyWeaponChooser",1);
			Delay(delayTimerL);
			alreadyFiredL = 1;
		}	
	}
}

Script "Goldeneye_TranslationIce" (void)
{
	CreateTranslation(34, 0:255=%[0.039,0.0313,0.07]:[0.578,0.578,0.672]);
	Thing_SetTranslation(0, 34);
}	

Script "Goldeneye_TransferIceTranslation" (void)
{
	int activator = ActivatorTID();
	int newtid = UniqueTID();
	Thing_ChangeTID(0, newtid);
	SetActivator(0,AAPTR_Master);
	Thing_SetTranslation(newtid, -1);
	Thing_ChangeTID(newtid, activator);
}

int GunChances[28] = { 10, 10, 10, 15, 15, 5, 5, 5, 10, 10, 5, 5, 10, 0, 2, 2, 3, 15, 20, 15, 20, 15, 5, 5, 15, 3, 10, 15 };
int TracerDamage[28] = { 13, 13, 13, 6, 6, 13, 10, 10, 10, 10, 14, 14, 14, 14, 18, 18, 12, 20, 25, 25, 25, 25, 10, 10, 6, 18, 5, 25 };

Script "Goldeneye_TracerDamage" (void)
{
	SetActivatorToTarget(0);
	int hitchance, hitmul, guntype, skillchance, gunchance, randnum;
	int skill = GameSkill()+1;
	int guardtier = CheckInventory("Goldeneye_GuardTierToken");
    int guardchance = guardtier+2;
	guntype = GetActorProperty(0,APROP_MASS)-201;
	gunchance = GunChances[guntype];
	skillchance = 6*skill;			
	hitmul = (skillchance+gunchance) * guardchance;
	hitchance = hitmul/2;		
	randnum = random(0,100);	
	if(randnum <= hitchance)
		SetResultValue(TracerDamage[guntype]);
	else
		SetResultValue(0);
}

Script "Goldeneye_JetPackLoop" (void)
{
	While(GetActorProperty(0,APROP_Health) > 0)
	{
		int smoketid = UniqueTid();
		int actorangle = GetActorAngle(0);
		SpawnForced("Goldeneye_JetPackSmoke",GetActorX(0)+(FixedMul(cos(actorangle),-8.0)),GetActorY(0)+(FixedMul(sin(actorangle),-8.0)),GetActorZ(0)+28.0,smoketid,random(0,1.0));
		SetActorVelocity(smoketid,random(-2.0,2.0),random(-2.0,2.0),random(-3.0,-2.0),0,0);
		if(random(0,3)==0) { ThrustThingZ(0,5,0,1); }
		Thing_ChangeTid(smoketid,0);
		Delay(2);
	}
}

Script "Goldeneye_GrenadePartDraw" (void)
{
	int activator = ActivatorTid();
	int newtid = UniqueTid();
	Thing_ChangeTid(0,newtid);
	int grenadetid = UniqueTID();
	SpawnForced("Goldeneye_GrenadePart",0,0,0,grenadetid);
	SetActivator(grenadetid,AAPTR_DEFAULT);
	SetPointer(AAPTR_MASTER,activator);
	Thing_ChangeTid(grenadetid,0);
	Thing_ChangeTid(newtid,activator);
}	